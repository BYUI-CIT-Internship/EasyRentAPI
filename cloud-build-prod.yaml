steps:

  # This step stops the easyrent pod
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Stop Pod
    args:
      - 'scale'
      - 'deploy'
      - 'easyrent-prod'
      - '--replicas=0'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

  # This step deploys the application in Kubernetes
  - name: 'gcr.io/cloud-builders/gke-deploy'
    id: Deploy to Production Pods
    args:
      - 'run'
      - '--filename=app-prod.yaml'
      - '--image=gcr.io/$PROJECT_ID/easyrent:$_SHORT_SHA'
      - '--location=us-east1-b'
      - '--cluster=cluster-1'

  # This step scales up the easyrent pod
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Start Pod
    args:
      - 'scale'
      - 'deploy'
      - 'easyrent-prod'
      - '--replicas=1'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
      -

  # This step runs automated integration tests
  - name: 'gcr.io/cloud-builders/docker'
    id: Run API Tests
    args: ['run','--entrypoint','npm','gcr.io/constellation-275522/easyrenttest-team6:latest','run','test-prod']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'