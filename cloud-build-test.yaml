steps:

  # This step stops the easyrent pod
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Stop Pod
    args:
      - 'scale'
      - 'deploy'
      - 'easyrent-test'
      - '--replicas=0'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

      # This step deploys the application in Kubernetes
  - name: 'gcr.io/cloud-builders/gke-deploy'
    args:
      - run
      - --filename=app-test.yaml
      - --image=gcr.io/$PROJECT_ID/easyrent:$_SHORT_SHA
      - --location=us-east1-b
      - --cluster=cluster-1

  # This step scales up the easyrent pod
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Start Pod
    args:
      - 'scale'
      - 'deploy'
      - 'easyrent-test'
      - '--replicas=1'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

  # This step runs automated integration tests
  - name: 'gcr.io/cloud-builders/docker'
    id: Run API Tests
    args: ['run','--entrypoint','npm','gcr.io/constellation-275522/easyrenttest-team6:latest','run','test-test']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-east1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Deploy Prod Environment
    args:
      - 'beta'
      - 'builds'
      - 'triggers'
      - 'run'
      - '3dc8c43c-e920-4f0f-83bd-310d8fba7e06'
      - '--branch=main'